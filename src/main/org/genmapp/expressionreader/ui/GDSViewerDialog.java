/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GDSViewerDialog.java
 *
 * Created on Jul 2, 2010, 2:22:37 PM
 */

package org.genmapp.expressionreader.ui;

import java.util.List;
import org.genmapp.expressionreader.ExpressionReaderUtil;
import org.genmapp.expressionreader.data.GDS;
import org.genmapp.expressionreader.data.SOFT;

/**
 *
 * @author djiao
 */
public class GDSViewerDialog extends javax.swing.JDialog implements SOFTViewer {

    private GDS gds;

    /** Creates new form GDSViewerDialog */
    public GDSViewerDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        softViewerPane = new org.genmapp.expressionreader.ui.SOFTViewerPane();
        subsetTabbedPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jSplitPane1.setLeftComponent(softViewerPane);

        subsetTabbedPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Subsets"));
        subsetTabbedPane.setMinimumSize(new java.awt.Dimension(320, 420));
        subsetTabbedPane.setPreferredSize(new java.awt.Dimension(420, 420));
        jSplitPane1.setRightComponent(subsetTabbedPane);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) throws Exception {
        final SOFT soft = ExpressionReaderUtil.getSOFT("GDS507", SOFT.Type.GDS, SOFT.Format.full);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                GDSViewerDialog dialog = new GDSViewerDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setSOFT(soft);
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private org.genmapp.expressionreader.ui.SOFTViewerPane softViewerPane;
    private javax.swing.JTabbedPane subsetTabbedPane;
    // End of variables declaration//GEN-END:variables

    public void setSOFT(SOFT soft) {
        if (soft.getType() == SOFT.Type.GDS) {
            this.gds = (GDS)soft;
            this.softViewerPane.setOwner(this);
            this.softViewerPane.setSoft(soft);

            List<SOFT> subsets = gds.getSubsets();
            for (SOFT subset : subsets) {
                GDSSubsetViewerPane pane = new GDSSubsetViewerPane();
                pane.setSOFT(subset, soft.getDataTables().getFirst().getHeaders());
                this.subsetTabbedPane.add(pane, subset.getId());
            }
        } else {
            throw new RuntimeException("Wrong SOFT type");
        }
    }

    public void viewSOFT(List<SOFT> soft) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void closeView(SOFT soft) {
        this.dispose();
    }
}
