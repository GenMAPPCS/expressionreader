/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * GDSGroupViewerPane.java
 *
 * Created on Jul 7, 2010, 11:07:09 PM
 */

package org.genmapp.expressionreader.ui;

import cytoscape.task.ui.JTaskConfig;
import cytoscape.task.util.TaskManager;
import java.io.InputStream;
import java.net.URL;
import java.util.List;
import java.util.Map;
import java.util.zip.GZIPInputStream;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import org.genmapp.expressionreader.ExpressionReaderUtil;
import org.genmapp.expressionreader.data.GDS;
import org.genmapp.expressionreader.data.SOFT;
import org.genmapp.expressionreader.parser.SOFTParser;
import org.genmapp.expressionreader.tasks.SOFTDownloadTask;

/**
 *
 * @author djiao
 */
public class GDSSubsetViewerPane extends javax.swing.JPanel implements SOFTViewer {

    /** Creates new form GDSGroupViewerPane */
    public GDSSubsetViewerPane() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        sampleTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        viewSampleBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        sampleList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        idField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        descField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        typeField = new javax.swing.JTextField();

        setLayout(new java.awt.BorderLayout());

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);

        sampleTabbedPane.setMinimumSize(new java.awt.Dimension(12, 320));
        sampleTabbedPane.setPreferredSize(new java.awt.Dimension(12, 320));
        jSplitPane1.setRightComponent(sampleTabbedPane);

        jPanel1.setLayout(new java.awt.BorderLayout());

        viewSampleBtn.setText(" View ");
        viewSampleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewSampleBtnActionPerformed(evt);
            }
        });
        jPanel2.add(viewSampleBtn);

        jPanel1.add(jPanel2, java.awt.BorderLayout.SOUTH);

        jScrollPane1.setViewportView(sampleList);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jLabel3.setText("ID:");
        jPanel3.add(jLabel3);

        idField.setEditable(false);
        jPanel3.add(idField);

        jLabel1.setText("Description:");
        jPanel3.add(jLabel1);

        descField.setEditable(false);
        jPanel3.add(descField);

        jLabel2.setText("Type:");
        jPanel3.add(jLabel2);

        typeField.setEditable(false);
        jPanel3.add(typeField);

        jPanel1.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jSplitPane1.setTopComponent(jPanel1);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void viewSampleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewSampleBtnActionPerformed
        String gsmId = (String)sampleList.getSelectedValue();
        int index = sampleTabbedPane.indexOfTab(gsmId);
        if (index < 0) { // create a new tab and add to it
            SOFTDownloadTask task = new SOFTDownloadTask(gsmId, this, SOFT.Format.quick);
            JTaskConfig config = task.getDefaultTaskConfig();
            boolean success = TaskManager.executeTask(task, config);
        } else { // bring the tab into focus
            sampleTabbedPane.setSelectedIndex(index);
        }
    }//GEN-LAST:event_viewSampleBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField descField;
    private javax.swing.JTextField idField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JList sampleList;
    private javax.swing.JTabbedPane sampleTabbedPane;
    private javax.swing.JTextField typeField;
    private javax.swing.JButton viewSampleBtn;
    // End of variables declaration//GEN-END:variables

    public void setSOFT(SOFT soft) {
        if (!"SUBSET".equals(soft.getTypeStr()))
            return;

        Map<String, Object> fields = soft.getFields();
        this.idField.setText((String)fields.get("subset_dataset_id"));
        this.descField.setText((String)fields.get("subset_description"));
        this.typeField.setText((String)fields.get("subset_type"));
        
        String[] list = ((String)fields.get("subset_sample_id")).split(",");
        DefaultListModel model = new DefaultListModel();
        for (String obj : list) {
            model.addElement(obj);
        }
        this.sampleList.setModel(model);
    }

    public void viewSOFT(SOFT soft) {
        SOFTViewerPane pane = new SOFTViewerPane();
        pane.setOwner(this);
        pane.setSoft(soft);
        sampleTabbedPane.add(soft.getId(), pane);
        sampleTabbedPane.setSelectedComponent(pane);
    }

    public void closeView(SOFT soft) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public static void main(String[] args) throws Exception {
        final SOFT soft = ExpressionReaderUtil.getSOFT("GDS507", SOFT.Type.GDS, SOFT.Format.full);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog dialog = new JDialog();
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                GDSSubsetViewerPane pane = new GDSSubsetViewerPane();
                dialog.setContentPane(pane);
                GDS gds = (GDS)soft;
                pane.setSOFT(gds.getSubsets().get(0));
                dialog.pack();
                dialog.setVisible(true);
            }
        });
    }
}